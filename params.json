{"name":"jDrive","tagline":"Its a wrapper for Google Drive API which makes using Google Drive easy to use. ","body":"# JDrive\r\n\r\nThis wraps the Google Drive API to insert and delete files in Google Drive. It also eases access to spreaadsheets. This API removes the boiler plate code. In addition you can use single service to access multiple Google Drive and Spreadsheets. \r\n\r\nThis API also needs secret auth key to communicate with Google Drive Server. Make sure you follow the instructions at https://developers.google.com/drive/v2/web/quickstart/java and place the file in the resources folder. A manual authentication of access will be required at the first time to validate the access. \r\n\r\n###Drive API\r\n```\r\npublic File uploadFile(String fileName, String description ,String parentId);\r\npublic boolean deleteFile (String fileId);\r\n```\r\n\r\nYou can also upload multiple files from a given path. This API uses FileFilter so you can make use of regex to filter files. \r\n```\r\npublic void uploadAllFiles(String path, String parentId) throws IOException;\r\npublic void uploadAllFilesParallel(String path, String parentId, FileFilter filter);\r\n```\r\n###SpreadSheet API\r\nYou can list, find spreadsheets and add or delete worksheets. \r\n```\r\npublic List<SpreadsheetEntry> getAllSpreadSheets();\r\npublic List<SpreadsheetEntry> findSpreadSheet(String name);\r\npublic boolean addWorksheet(SpreadsheetEntry spredsheet, WorksheetEntry worksheet);\r\npublic boolean deleteWorksheet(WorksheetEntry worksheet);\r\n```\r\nYou can also edit the content of the worksheet simply using a single API call. \r\n```\r\npublic void updateFileContent(WorksheetEntry worksheet, int row, int column, String content)\r\n\t\t\tthrows ServiceException, IOException;\r\n```\r\nSample Code:\r\n```\r\npublic static void chnageWorksheetContent() {\r\n\t\ttry{\r\n\t\t\tJDrive jdrive = new JDriveImp();\r\n\t\t\tSpreadsheetService service = new Auth().getSpreadsheetService();\r\n\t\t\tList<SpreadsheetEntry> entries =\tjdrive.findSpreadSheet(\"name\");\r\n\t\t\tWorksheetFeed worksheetFeed = service.getFeed(entries.get(0).getWorksheetFeedUrl(), WorksheetFeed.class);\r\n\t\t\tList<WorksheetEntry> worksheets = worksheetFeed.getEntries();\r\n\t\t\tWorksheetEntry worksheet = worksheets.get(0);\r\n\t\t\tjdrive.updateFileContent(worksheet, 1,1,\"TestData\");\r\n\t\t}catch(Exception e){\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n```\r\n## How to build\r\nYou can download the source and go to project root directory. This project needs [Gradle](http://gradle.org/getting-started-gradle-java/). More help for installing gradle is provided [here](https://docs.gradle.org/current/userguide/installation.html). \r\nFrom the command line run \r\n```\r\ngradle build\r\n```\r\nThis will compile the project and create a jar file named *'JDrive.jar'* in the build/libs/ folder. \r\n\r\n### Test Cases \r\nIn this project jUnit test cases depends on hard coded values which are specific for the current user. I have not made it configurable yet, so if you want to use it then please go through it and fix it for yourself.  \r\n\r\nFor sanity checks you can use the test cases. Run \r\n```\r\ngradle test\r\n```\r\nThis will generate a test report at build/test/index.html .  \r\n\r\nIf you have any suggestions then open a issue and I will try working on it. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}